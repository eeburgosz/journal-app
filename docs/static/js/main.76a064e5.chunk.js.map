{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","components/reducers/uiReducer.js","components/reducers/notesReducer.js","store/store.js","components/reducers/authReducer.js","JournalApp.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","googleAuthProvider","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","loadNotes","uid","getDocs","query","collection","notesSnap","notes","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","addNewNote","setNotes","startSaveNote","dispatch","getState","auth","url","noteToFirestore","noteRef","doc","updateDoc","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","handlerInputChange","target","name","value","reset","newFormState","NotesAppBar","date","dayDate","moment","useDispatch","active","useSelector","state","className","format","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","handleInputChange","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","noteDel","deleteDoc","showDenyButton","confirmButtonText","denyButtonText","then","result","isConfirmed","isDenied","startDeleting","NothingSelected","setError","err","startLoginEmailPassword","email","password","getAuth","signInWithEmailAndPassword","user","login","displayName","catch","message","logout","JournalEntry","noteDate","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","addDoc","JournalScreen","LoginScreen","loading","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","ui","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"2QAiBQA,EAAMC,YAVS,CACnBC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,8CAMHC,EAAKC,YAAaT,GAElBU,EAAqB,IAAIC,ICrBpBC,EAAU,uCAAE,WAAMC,GAAN,mBAAAC,EAAA,4DAEL,oDAEVC,EAAU,IAAIC,UACXC,OAAO,gBAAiB,iBACjCF,EAASE,OAAO,OAAQJ,GANH,kBASCK,MAPN,mDAOsB,CAC9BC,OAAQ,OACRC,KAAML,IAXO,YASXM,EATW,QAcRC,GAdQ,kCAeUD,EAAKE,OAff,eAePC,EAfO,yBAgBNA,EAAUC,YAhBJ,yBAkBDJ,EAAKE,OAlBJ,qFAsBjBG,QAAQC,IAAR,MAtBiB,+DAAF,sDCGVC,EAAS,uCAAE,WAAOC,GAAP,iBAAAf,EAAA,sEAEGgB,YAASC,YAAMC,YAAWxB,EAAD,UAASqB,EAAT,qBAF5B,cAEdI,EAFc,OAGdC,EAAO,GAEbD,EAAUE,SAAS,SAAAC,GAEfF,EAAMG,KAAN,aACIC,GAAIF,EAASE,IACVF,EAASG,YATA,kBAebL,GAfa,2CAAF,sDCFTM,EAEF,eAFEA,EAGD,gBAHCA,EAMG,iBANHA,EAOM,oBAPNA,EAUO,qBAVPA,EAWQ,sBAXRA,EAcI,mBAdJA,EAeI,0BAfJA,EAgBE,qBAhBFA,EAiBK,uBAjBLA,EAmBI,uBAnBJA,EAoBY,0BCUZC,EAAY,SAAEH,EAAII,GAC3B,MAAO,CACHC,KAAMH,EACNI,QAAQ,aACJN,MACGI,KAKFG,EAAY,SAACP,EAAII,GAAL,MAAc,CACnCC,KAAMH,EACNI,QAAQ,aACJN,MACGI,KAWEI,EAAU,SAAEZ,GAAF,MAAa,CAChCS,KAAMH,EACNI,QAASV,IAGAa,EAAe,SAACL,GACzB,8CAAO,WAAMM,EAAUC,GAAhB,mBAAAnC,EAAA,6DAEGe,EAAKoB,IAAWC,KAAKrB,IAEtBa,EAAKS,YACCT,EAAKS,WAGVC,EARH,eAQwBV,IACJJ,GAEjBe,EAASC,YAAK9C,EAAF,UAASqB,EAAT,0BAA8Ba,EAAKJ,KAXlD,SAYGiB,YAAUF,EAASD,GAZtB,OAcHJ,EAAUQ,EAAYd,EAAKJ,GAAII,IAC/Be,IAAKC,KAAK,QAAShB,EAAKiB,MAAO,WAf5B,2CAAP,yDAmBSH,EAAa,SAAClB,EAAII,GAAL,MAAc,CAEpCC,KAAMH,EACNI,QAAS,CACLN,KACAI,KAAK,aACDJ,MACGI,MA+DFkB,EAAY,SAACtB,GACtB,MAAO,CACHK,KAAMH,EACNI,QAASN,I,OCxJJuB,EAAU,WAAuB,IAAtBC,EAAqB,uDAAP,GAElC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KACMC,EAAoB,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACxBF,EAAU,2BACHD,GADE,kBAEJG,EAAOC,KAAOD,EAAOE,UAIxBC,EAAO,WAAiC,IAA/BC,EAA8B,uDAAhBT,EACzBG,EAAUM,IAGd,MAAO,CAACP,EAAQE,EAAoBI,I,wBCX3BE,EAAc,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAEnBC,EAASC,IAAOF,GAEhBzB,EAAW4B,cACVC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAM7C,SAArC2C,OAqBP,OACI,sBAAKG,UAAU,gBAAf,UACI,+BACI,gCAAQN,EAAQO,OAAO,qBAG3B,uBACI3C,GAAI,eACJK,KAAM,OACNyB,KAAM,OACNc,MAAS,CAACC,QAAS,QACnBC,SApBY,SAACC,GAErB,IAAMxE,EAAMwE,EAAElB,OAAOmB,MAAM,GAEvBzE,GACAmC,EFmEiB,SAACnC,GAE1B,8CAAO,WAAOmC,EAAUC,GAAjB,iBAAAnC,EAAA,6DACa2B,EAAcQ,IAAWf,MAAjC2C,OAERpB,IAAKC,KAAK,CACNC,MAAO,eACP4B,KAAM,iBACNC,mBAAmB,EAEnBC,mBAAmB,EAEnBC,SAAU,WACNjC,IAAKkC,iBAXV,SAgBkB/E,EAAYC,GAhB9B,OAgBG+E,EAhBH,OAkBHnD,EAAWU,IAAKyC,EAEhB5C,EAAUD,EAAcN,IAExBgB,IAAKoC,QAtBF,2CAAP,wDErEkBC,CAAejF,OAkBzB,gCACI,wBACImE,UAAU,MACVe,QA/BW,WAEvBC,SAASC,cAAc,iBAAiBC,SA2BhC,qBAKA,wBACIlB,UAAU,MACVe,QAzCE,WAEd/C,EAAUD,EAAc8B,KAqChB,yBC3CHsB,EAAa,WAEtB,IAAMnD,EAAW4B,cAEFlC,EAAQoC,aAAY,SAAAC,GAAK,OAAIA,EAAM7C,SAA3C2C,OAEP,EAA8ChB,EAASnB,GAAvD,mBAAO0D,EAAP,KAAmBC,EAAnB,KAAsC/B,EAAtC,KACQlD,EAAmBgF,EAAnBhF,KAAMuC,EAAayC,EAAbzC,MAAOrB,EAAM8D,EAAN9D,GAGfgE,EAAWC,iBAAQ7D,EAAKJ,IAE9BkE,qBAAU,WAEF9D,EAAKJ,KAAOgE,EAASG,UACrBnC,EAAM5B,GACN4D,EAASG,QAAS/D,EAAKJ,MAG5B,CAACI,EAAM4B,IAEVkC,qBAAU,WAGNxD,EAAUP,EAAW2D,EAAW9D,GAAZ,eAAoB8D,OAEzC,CAACA,EAAYpD,IAOhB,OACI,sBAAKgC,UAAU,sBAAf,UACI,cAAC,EAAD,IAEA,sBAAKA,UAAU,iBAAf,UACI,uBACIrC,KAAK,OACL+D,YAAY,YACZ1B,UAAU,qBACV2B,aAAa,MACbvC,KAAM,QACNC,MAAQV,EACRyB,SAAWiB,IAEf,0BACIK,YAAY,sBACZ1B,UAAU,kBACVZ,KAAM,OACNC,MAAQjD,EACRgE,SAAWiB,IAGV3D,EAAKS,KAED,8BACG,qBACIyD,IAAMlE,EAAKS,IACX0D,IAAI,SACJ7B,UAAU,sBAK9B,wBACIA,UAAW,iBACXe,QAxCQ,WAEhB/C,EHqFoB,SAACV,GACzB,8CAAO,WAAMU,EAAUC,GAAhB,iBAAAnC,EAAA,6DAEGe,EAAKoB,IAAWC,KAAKrB,IAErBiF,EAASxD,YAAK9C,EAAF,UAASqB,EAAT,0BAA8BS,IAJ7C,SAKGyE,YAAWD,GALd,OAOHrD,IAAKC,KAAK,CACNC,MAAO,kCACPqD,gBAAgB,EAChBC,kBAAmB,SACnBC,eAAe,WACdC,MAAK,SAACC,GAEHA,EAAOC,aACPrE,EAAUY,EAAWtB,IACvBmB,IAAKC,KAAK,6BAA8B,GAAI,YACnC0D,EAAOE,UAChB7D,IAAKC,KAAK,wBAAyB,GAAI,WAlB1C,2CAAP,wDGtFc6D,CAAcjF,KAoCpB,wBCxECkF,EAAkB,WAC3B,OACI,sBAAKxC,UAAU,wBAAf,UACI,iDAEI,uBAFJ,yBAKA,mBAAGA,UAAU,+BCRZyC,EAAU,SAACC,GAAD,MAAS,CAC5B/E,KAAMH,EACNI,QAAS8E,ICKAC,EAAyB,SAACC,EAAOC,GAC1C,OAAO,SAAC7E,GAEJA,EDDyB,CAC7BL,KAAMH,ICEF,IAAMU,EAAM4E,cACZC,YAA2B7E,EAAM0E,EAAOC,GACnCV,MAAK,YAAY,IAAVa,EAAS,EAATA,KAIZhF,EACIiF,EAAOD,EAAKnG,IAAKmG,EAAKE,cAG1BlF,EDT0B,CAC9BL,KAAMH,OCUH2F,OAAO,SAAA9C,GACN3D,QAAQC,IAAI0D,GAEO,2CAAdA,EAAE+C,QACH3E,IAAKC,KAAK,QAAS,wCAAyC,SACvC,2CAAd2B,EAAE+C,SACT3E,IAAKC,KAAK,QAAS,iBAAkB,cAyCpCuE,EAAO,SAACpG,EAAKqG,GACtB,MAAM,CACFvF,KAAMH,EACNI,QAAS,CACLf,MACAqG,iBAgBCG,EAAQ,iBAAM,CACvB1F,KAAMH,IC1FG8F,EAAe,SAAC,GAAoC,IAAlChG,EAAiC,EAAjCA,GAAImC,EAA6B,EAA7BA,KAAMd,EAAuB,EAAvBA,MAAOvC,EAAgB,EAAhBA,KAAM+B,EAAU,EAAVA,IAG5CoF,EAAU5D,IAAOF,GAGjBzB,EAAW4B,cAQjB,OACI,sBACII,UAAU,+DACVe,QATgB,WACpB/C,EAAUP,EAAYH,EAAI,CACtBmC,OAAMd,QAAOvC,OAAM+B,UAKvB,UAIQA,GACI,qBACI6B,UAAU,yBACVE,MAAQ,CACJsD,eAAgB,QAChBC,gBAAgB,OAAD,OAAUtF,EAAV,QAK3B,sBAAK6B,UAAU,sBAAf,UACI,mBAAGA,UAAU,uBAAb,SAAqCrB,IACrC,mBAAGqB,UAAU,yBAAb,SAAuC5D,OAE3C,sBAAK4D,UAAU,0BAAf,UACI,+BAAOuD,EAAStD,OAAO,UACvB,6BAAKsD,EAAStD,OAAO,eCpC5ByD,GAAiB,WAG1B,IAAOxG,EAAS4C,aAAY,SAAAC,GAAK,OAAIA,EAAM7C,SAApCA,MAGP,OACI,qBAAK8C,UAAU,yDAAf,SAGQ9C,EAAMyG,KAAI,SAAAjG,GAAI,OACV,cAAC,EAAD,eAEQA,GADEA,EAAKJ,UCTtBsG,GAAU,WAEnB,IAAM5F,EAAW4B,cAEVR,EAAQU,aAAY,SAAAC,GAAK,OAAIA,EAAM7B,QAAnCkB,KAWP,OACI,wBAAOY,UAAU,mBAAjB,UACI,sBAAKA,UAAU,0BAAf,UACI,qBAAIA,UAAU,OAAd,UACI,mBAAGA,UAAU,gBACb,qCAAQZ,EAAR,UAGJ,wBAAQY,UAAU,MACVe,QAlBA,WAEhB/C,EHqEJ,uCAAO,WAAOA,GAAP,eAAAlC,EAAA,6DACGoC,EAAM4E,cADT,SAEGe,YAAQ3F,GAFX,OAIHF,EAAUqF,KACVrF,ENsEE,CACFL,KAAMH,IM5EH,2CAAP,wDGtDY,uBAMJ,sBAAKwC,UAAU,qBACVe,QAnBO,WAChB/C,ETRJ,uCAAO,WAAMA,EAAUC,GAAhB,mBAAAnC,EAAA,6DAEGe,EAAKoB,IAAWC,KAAKrB,IAGrBiH,EAAS,CACXnF,MAAO,GACPvC,KAAM,GACNqD,MAAM,IAAIsE,MAAOC,WARlB,SAWcC,YAAQjH,YAAWxB,EAAD,UAASqB,GAAQ,iBAAmBiH,GAXpE,OAWGxF,EAXH,OAcHN,EAAUP,EAAWa,EAAIhB,GAAIwG,IAC7B9F,EAAUH,EAAWS,EAAIhB,GAAIwG,IAf1B,2CAAP,0DSyBQ,UAEI,mBAAG9D,UAAU,+BACb,mBAAGA,UAAU,OAAb,0BAGJ,cAAC,GAAD,QCpCCkE,GAAgB,WAEzB,IAAOrE,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAM7C,SAArC2C,OAEP,OACI,sBAAKG,UAAU,wBAAf,UACI,cAAC,GAAD,IAEA,+BAGSH,EACG,cAAC,EAAD,IACA,cAAC,EAAD,U,2BCXXsE,GAAc,WAEvB,IAAMnG,EAAW4B,cAEVwE,EAAWtE,aAAY,SAAAC,GAAK,OAAIA,KAAhCqE,QAEP,EAA0CvF,EAAQ,CAC9C+D,MAAO,oBACPC,SAAU,WAFd,mBAAQzB,EAAR,KAAoBlC,EAApB,KAKQ0D,EAAmBxB,EAAnBwB,MAAOC,EAAYzB,EAAZyB,SAcf,OACI,gCACI,oBAAI7C,UAAU,cAAd,mBAEA,uBAAMqE,SAhBK,SAAChE,GAEhBA,EAAEiE,iBAEFtG,EAAU2E,EAAwBC,EAAOC,KAYrC,UACI,uBACIlF,KAAK,OACL+D,YAAY,QACZtC,KAAK,QACLY,UAAU,cACV2B,aAAa,MACbtC,MAAQuD,EACRxC,SAAWlB,IAEf,uBACIvB,KAAK,WACL+D,YAAY,WACZtC,KAAK,WACLY,UAAU,cACVX,MAAQwD,EACRzC,SAAWlB,IAEf,wBACIvB,KAAK,SACLqC,UAAU,4BACVuE,SAAWH,EAHf,mBAOA,sBAAKpE,UAAU,wBAAf,UACI,2DAEA,sBACIA,UAAU,aACVe,QAtCK,WACrB/C,GLkCG,SAACA,GACJ,IAAME,EAAO4E,cACb0B,YAAgBtG,EAAMxC,GAAoByG,MAAK,YAAY,IAAVa,EAAS,EAATA,KAEzChF,EAASiF,EAAMD,EAAKnG,IAAKmG,EAAKE,qBKH1B,UAII,qBACIlD,UAAU,sBADd,SAEI,qBAAKA,UAAU,cAAc4B,IAAI,8EAA8EC,IAAI,oBAEvH,mBAAG7B,UAAU,WAAb,SACI,4DAMZ,cAAC,KAAD,CACIyE,GAAG,WACHzE,UAAU,OAFd,uC,oBCvEH0E,GAAiB,WAG1B,IAAOC,EAAY7E,aAAY,SAAAC,GAAK,OAAIA,EAAM6E,MAAvCD,SAGP,EAAyC9F,EAAQ,CAC7CO,KAAM,UACNwD,MAAO,oBACPC,SAAU,SACVgC,UAAW,WAJf,mBAAQzD,EAAR,KAAoBC,EAApB,KAOMrD,EAAW4B,cAETR,EAAoCgC,EAApChC,KAAMwD,EAA8BxB,EAA9BwB,MAAOC,EAAuBzB,EAAvByB,SAAUgC,EAAazD,EAAbyD,UAWzBC,EAAa,WAEf,OAAI1F,EAAK2F,OAAOC,QAAU,GAEtBhH,EAAUyE,EAAS,sBACZ,GACCwC,KAAUC,QAAStC,GAIpBC,IAAagC,GAAahC,EAASmC,OAAS,GAEnDhH,EAAUyE,EAAS,6DACZ,IAEXzE,EP3CwB,CAC5BL,KAAMH,KO2CK,IARHQ,EAAUyE,EAAS,wBACZ,IAUf,OACI,gCACI,oBAAIzC,UAAU,cAAd,sBAEA,uBAAMqE,SAhCQ,SAAChE,GACnBA,EAAEiE,iBAEGQ,KAED9G,ENSsC,SAAC4E,EAAOC,EAAUzD,GAChE,OAAO,SAACpB,GAEJ,IAAME,EAAM4E,cACRqC,YAA+BjH,EAAM0E,EAAOC,GACvCV,KADL,uCACW,6BAAArG,EAAA,6DAAOkH,EAAP,EAAOA,KAAP,SAEDoC,YAAepC,EAAM,CAAEE,YAAa9D,IAFnC,OAIX1C,QAAQC,IAAIqG,GAEZhF,EACIiF,EAAOD,EAAKnG,IAAKmG,EAAKE,cAPf,2CADX,uDAUDC,OAAO,SAAA9C,GACN3D,QAAQC,IAAI0D,GACO,iDAAdA,EAAE+C,SACH3E,IAAKC,KAAK,QAAS,kCAAmC,aM1BhD2G,CAAmCzC,EAAOC,EAAUzD,KA2B9D,UAGQuF,GAEI,qBAAK3E,UAAU,oBAAf,SACK2E,IAKb,uBACIhH,KAAK,OACL+D,YAAY,YACZtC,KAAK,OACLY,UAAU,cACV2B,aAAa,MACbtC,MAAQD,EACRgB,SAAWiB,IAEf,uBACI1D,KAAK,OACL+D,YAAY,QACZtC,KAAK,QACLY,UAAU,cACV2B,aAAa,MACbtC,MAAQuD,EACRxC,SAAWiB,IAEf,uBACI1D,KAAK,WACL+D,YAAY,WACZtC,KAAK,WACLY,UAAU,cACVX,MAAQwD,EACRzC,SAAWiB,IAEf,uBACI1D,KAAK,WACL+D,YAAY,kBACZtC,KAAK,YACLY,UAAU,cACVX,MAAQwF,EACRzE,SAAWiB,IAEf,wBACI1D,KAAK,SACLqC,UAAU,iCAFd,sBAMA,cAAC,KAAD,CACIyE,GAAG,QACHzE,UAAU,QAFd,wCCxGHsF,GAAa,WACtB,OACI,qBAAKtF,UAAU,aAAf,SACI,qBAAKA,UAAU,4DAAf,SACI,eAAC,KAAD,WAEI,cAAC,KAAD,CACIuF,OAAK,EACLC,KAAM,cACNC,UAAYtB,KAIhB,cAAC,KAAD,CACIoB,OAAK,EACLC,KAAM,iBACNC,UAAYf,KAGhB,cAAC,KAAD,CAAUD,GAAI,wB,qDCpBrBiB,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,mBAEF,OACI,cAAC,KAAD,2BAAWA,GAAX,IACOJ,UAAY,SAACK,GAAD,OACPH,EACQ,cAACC,EAAD,eAAeE,IACf,cAAC,KAAD,CAAUrB,GAAI,qB,mCCX7BsB,GAAc,SAAC,GAIrB,IAHHJ,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,mBACF,OACI,cAAC,KAAD,2BAAWA,GAAX,IACOJ,UAAY,SAACK,GAAD,OACNH,EAEO,cAAC,KAAD,CAAUlB,GAAI,MADd,cAACmB,EAAD,eAAeE,SCK9BE,GAAY,WAErB,IAAMhI,EAAW4B,cAEjB,EAAgCb,oBAAS,GAAzC,mBAAOkH,EAAP,KAAiBC,EAAjB,KAEA,EAAoCnH,oBAAS,GAA7C,mBAAOoH,EAAP,KAAmBC,EAAnB,KAuBA,OArBA5E,qBAAU,WAEN,IAAMtD,EAAM4E,eACZuD,aAAmBnI,GAAM,SAAC8E,GhBoBF,IAACnG,GgBlBrB,OAAKmG,QAAL,IAAKA,OAAL,EAAKA,EAAMnG,MACPmB,EAAUiF,EAAMD,EAAKnG,IAAKmG,EAAKE,cAC/BkD,GAAe,GAEfpI,GhBciBnB,EgBdWmG,EAAKnG,IhBe7C,uCAAO,WAAOmB,GAAP,eAAAlC,EAAA,sEACgBc,EAAUC,GAD1B,OACGK,EADH,OAEHc,EAAUF,EAASZ,IAFhB,2CAAP,yDgBZYkJ,GAAe,GAGnBF,GAAY,QAIjB,CAAClI,EAAUkI,EAAaE,IAEtBH,EAEG,gDAOJ,cAAC,KAAD,UACI,8BACI,eAAC,KAAD,WAEI,cAAC,GAAD,CACIN,gBAAkBQ,EAClBX,KAAK,QACLC,UAAYH,KAGhB,cAAC,GAAD,CACIK,gBAAkBQ,EAClBZ,OAAK,EACLC,KAAK,IACLC,UAAYvB,KAGhB,cAAC,KAAD,CAAUO,GAAI,wB,kBCvE5B3F,GAAc,CAChBsF,SAAS,EACTO,SAAU,M,SCYR7F,GAAc,CAChB5B,MAAO,GACP2C,OAAQ,MCXNyG,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAErGC,GAAUC,aAAgB,CAC5BzI,KCRsB,WAAyB,IAAvB6B,EAAsB,uDAAf,GAAI6G,EAAW,uCAE9C,OAAQA,EAAOjJ,MACX,KAAKH,EACD,MAAO,CACHX,IAAK+J,EAAOhJ,QAAQf,IACpBuC,KAAMwH,EAAOhJ,QAAQsF,aAG7B,KAAK1F,EACD,MAAO,GAEX,QACI,OAAOuC,IDJf6E,GFJoB,WAAiC,IAAhC7E,EAA+B,uDAAxBjB,GAAc8H,EAAU,uCAEpD,OAAQA,EAAOjJ,MACX,KAAKH,EACD,kCACOuC,GADP,IAEI4E,SAAUiC,EAAOhJ,UAGzB,KAAKJ,EACD,kCACOuC,GADP,IAEI4E,SAAU,OAIlB,KAAKnH,EACD,kCACOuC,GADP,IAEIqE,SAAS,IAGjB,KAAK5G,EACD,kCACOuC,GADP,IAEIqE,QAAStF,GAAasF,UAG9B,QACI,OAAOrE,IExBf7C,MDSuB,WAAmC,IAAjC6C,EAAgC,uDAAzBjB,GAAc8H,EAAW,uCAEzD,OAAQA,EAAOjJ,MAEX,KAAKH,EACD,kCACOuC,GADP,IAEIF,OAAO,eACA+G,EAAOhJ,WAKtB,KAAKJ,EACD,kCACOuC,GADP,IAEI7C,MAAM,CAAE0J,EAAOhJ,SAAV,oBAAsBmC,EAAM7C,UAIzC,KAAKM,EACD,kCACOuC,GADP,IAEI7C,MAAM,aAAK0J,EAAOhJ,WAG1B,KAAKJ,EACD,OAAO,2BACAuC,GADP,IAEI7C,MAAO6C,EAAM7C,MAAMyG,KACf,SAAAjG,GAAI,OAAGA,EAAKJ,KAAOsJ,EAAOhJ,QAAQN,GAC5BsJ,EAAOhJ,QAAQF,KACfA,OAIlB,KAAKF,EACD,kCACOuC,GADP,IAEIF,OAAQ,KACR3C,MAAO6C,EAAM7C,MAAM2J,QAAQ,SAAAnJ,GAAI,OAAGA,EAAKJ,KAAOsJ,EAAOhJ,aAG7D,KAAKJ,EACD,kCACOuC,GADP,IAEIF,OAAQ,KACR3C,MAAO,KAIf,QACI,OAAO6C,MC1DN+G,GAAOC,aAChBL,GACAJ,GACIU,aAAiBC,QEbZC,GAAa,WACtB,OACI,cAAC,IAAD,CAAUJ,MAAQA,GAAlB,SACI,cAAC,GAAD,OCIGK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlF,MAAK,YAAkD,IAA/CmF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCCdO,IAASC,OAEL,cAAC,GAAD,IACA5G,SAAS6G,eAAe,SAM5BV,O","file":"static/js/main.76a064e5.chunk.js","sourcesContent":["import 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { GoogleAuthProvider } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyApPxUBsi6-V-EVuNmHnb3XFkr1xKkbSFc\",\r\n    authDomain: \"react-app-curso-3396b.firebaseapp.com\",\r\n    projectId: \"react-app-curso-3396b\",\r\n    storageBucket: \"react-app-curso-3396b.appspot.com\",\r\n    messagingSenderId: \"757385543633\",\r\n    appId: \"1:757385543633:web:4242d7133e4a3adcad6af0\"\r\n  };\r\n  \r\n  // Initialize Firebase\r\n  const app = initializeApp(firebaseConfig);\r\n \r\n  const db = getFirestore(app);\r\n   \r\n  const googleAuthProvider = new GoogleAuthProvider();\r\n   \r\n  export{\r\n      db,\r\n      googleAuthProvider\r\n  }\r\n\r\n","export const fileUpload= async(file)=> {\r\n\r\n    const cloudUrl= 'https://api.cloudinary.com/v1_1/eburgos88/upload';\r\n\r\n    const formData= new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp= await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if( resp.ok ){\r\n            const cloudResp= await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        throw error;\r\n    }\r\n\r\n}","import { collection, getDocs, query } from \"@firebase/firestore\"\r\nimport { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes= async( uid )=> {\r\n    \r\n    const notesSnap= await getDocs( query(collection(db, `${ uid }/journal/notes`)) );\r\n    const notes= [];\r\n\r\n    notesSnap.forEach( snapHijo=> {\r\n        //console.log(snapHijo.data());\r\n        notes.push( {\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    } )\r\n\r\n    //console.log(notes);\r\n    \r\n    return notes;\r\n\r\n}\r\n","\r\nexport const types= {\r\n\r\n    login: '[Auth] login',\r\n    logout: '[Auth] logout',\r\n\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Deleted note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning',\r\n    \r\n}","import { addDoc, collection, deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\r\nimport Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const startNewNote= ()=> { \r\n\r\n    return async(dispatch, getState)=> {\r\n\r\n        const uid= getState().auth.uid;\r\n        //console.log(uid);\r\n\r\n        const newNote= {            \r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc= await addDoc( collection(db, `${ uid }`, \"journal/notes\") , newNote);\r\n        //console.log(doc);\r\n         \r\n        dispatch( activeNote(doc.id, newNote) );\r\n        dispatch( addNewNote(doc.id, newNote) )\r\n    }\r\n\r\n}\r\n\r\nexport const activeNote= ( id, note )=> {\r\n    return {\r\n        type: types.notesActive,\r\n        payload: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n}\r\n\r\nexport const addNewNote= (id, note)=> ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes= (uid)=> {\r\n    return async( dispatch )=> {\r\n        const notes= await loadNotes(uid); \r\n        dispatch( setNotes(notes) )\r\n    }\r\n}\r\n\r\nexport const setNotes= ( notes )=> ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNote= (note)=> {\r\n    return async(dispatch, getState)=> {\r\n\r\n        const uid= getState().auth.uid;\r\n\r\n        if( !note.url ){\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFirestore= {...note};\r\n        delete noteToFirestore.id;\r\n\r\n        const noteRef= doc( db, `${uid}/journal/notes/${note.id}`)\r\n        await updateDoc(noteRef, noteToFirestore);\r\n\r\n        dispatch( refreshNote(note.id, note) );\r\n        Swal.fire('Saved', note.title, 'success')\r\n    }\r\n}\r\n\r\nexport const refreshNote= (id, note)=> ({\r\n\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, /* note */\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const startUploading= (file)=> {\r\n\r\n    return async( dispatch, getState)=> {\r\n        const { active: activeNote }= getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n\r\n            showConfirmButton: false,\r\n            \r\n            willOpen: ()=> {\r\n                Swal.showLoading()\r\n            }\r\n            \r\n        })\r\n\r\n        const fileUrl= await fileUpload( file )\r\n        //console.log(fileUrl)\r\n        activeNote.url= fileUrl;\r\n\r\n        dispatch( startSaveNote(activeNote) )\r\n\r\n        Swal.close();\r\n    \r\n    }\r\n}\r\n\r\nexport const startDeleting= (id)=> {\r\n    return async(dispatch, getState)=> {\r\n\r\n        const uid= getState().auth.uid;\r\n\r\n        const noteDel= doc( db, `${uid}/journal/notes/${id}` );\r\n        await deleteDoc( noteDel );\r\n\r\n        Swal.fire({\r\n            title: 'Do you want to delete the note?',\r\n            showDenyButton: true,            \r\n            confirmButtonText: 'Delete',\r\n            denyButtonText: `Cancel`,\r\n          }).then((result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n                dispatch( deleteNote(id) );\r\n              Swal.fire('The note has been deleted!', '', 'success')\r\n            } else if (result.isDenied) {\r\n              Swal.fire('Changes are not saved', '', 'info')\r\n            }\r\n          })\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote= (id)=> {\r\n    return {\r\n        type: types.notesDelete,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const noteLogout= ()=>{\r\n    return{\r\n        type: types.notesLogoutCleaning,\r\n\r\n    }\r\n}","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState= {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n    const handlerInputChange= ({target})=> {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    const reset= ( newFormState= initialState)=> {\r\n        setValues(newFormState)\r\n    };\r\n\r\n    return [values, handlerInputChange, reset];\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\nimport moment from 'moment';\r\n\r\nexport const NotesAppBar = ({date}) => {\r\n\r\n    const dayDate= moment(date);\r\n\r\n    const dispatch = useDispatch()\r\n    const {active} = useSelector(state => state.notes)\r\n    \r\n    const handleSave= ()=> {\r\n        //console.log(active);\r\n        dispatch( startSaveNote(active) )\r\n    }\r\n\r\n    const handlePictureUpload= ()=> {\r\n        //console.log('picture');\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange= (e)=> {\r\n        //console.log(e.target.files)\r\n        const file= e.target.files[0];\r\n\r\n        if( file ){\r\n            dispatch( startUploading(file) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>\r\n                <small>{dayDate.format('dddd - MMM Do')}</small>    \r\n            </span>\r\n\r\n            <input\r\n                id= \"fileSelector\"\r\n                type= \"file\" \r\n                name= \"file\"\r\n                style= { {display: 'none'} }\r\n                onChange= {handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick= {handlePictureUpload}>\r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick= {handleSave}>\r\n                    Save\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {active: note} = useSelector(state => state.notes);\r\n    //console.log(note);\r\n    const [formValues, handleInputChange, reset]= useForm( note );\r\n    const { body, title, id }= formValues;\r\n    //console.log(formValues);\r\n\r\n    const activeId = useRef( note.id )\r\n\r\n    useEffect(() => {\r\n        \r\n        if( note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current= note.id\r\n        }\r\n        \r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        \r\n        //console.log(formValues);\r\n        dispatch( activeNote(formValues.id, {...formValues}) )\r\n\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete= ()=> {\r\n        //console.log(id)\r\n        dispatch( startDeleting(id) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some text\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name= \"title\"\r\n                    value= {title} \r\n                    onChange= {handleInputChange}\r\n                />\r\n                <textarea\r\n                    placeholder=\"What happend today?\"\r\n                    className=\"notes__textarea\"\r\n                    name= \"body\"\r\n                    value= {body}    \r\n                    onChange= {handleInputChange}>                  \r\n                </textarea>\r\n                {\r\n                    (note.url) \r\n                        &&\r\n                        (<div>\r\n                            <img\r\n                                src= {note.url}\r\n                                alt=\"Imagen\"\r\n                                className=\"notes__image\" />\r\n                        </div>)\r\n                }\r\n            </div>\r\n\r\n            <button\r\n                className= \"btn btn-danger\"\r\n                onClick= {handleDelete}>\r\n                    Delete\r\n\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const setError= (err)=> ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError= ()=> ({\r\n    type: types.uiRemoveError,   \r\n});\r\n\r\nexport const startLoading= ()=> ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading= ()=> ({\r\n    type: types.uiFinishLoading\r\n});\r\n\r\n\r\n/* \r\n            export const finishLoading= ()=> {\r\n                return {type: types.uiFinishLoading}\r\n            };\r\n */ ","import Swal from 'sweetalert2';\r\nimport { noteLogout } from \"./notes\";\r\nimport { types } from \"../types/types\";\r\nimport { googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n\r\nimport { getAuth, signInWithPopup, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\n\r\n\r\nexport const startLoginEmailPassword= (email, password)=> {\r\n    return (dispatch)=> {\r\n\r\n        dispatch( startLoading() );\r\n        \r\n        const auth= getAuth();\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(({user})=> {        \r\n\r\n        //console.log(user);\r\n\r\n        dispatch(\r\n            login( user.uid, user.displayName )\r\n        )\r\n\r\n        dispatch( finishLoading() );\r\n\r\n    }).catch( e=> {\r\n        console.log(e);\r\n        //Swal.fire('Error', e.message, 'error')\r\n        if ( e.message === 'Firebase: Error (auth/user-not-found).' ){\r\n            Swal.fire('Error', 'Wrong email or user should be deleted', 'error')\r\n        }else if ( e.message === 'Firebase: Error (auth/wrong-password).'){\r\n            Swal.fire('Error', 'Wrong password', 'error')\r\n        }\r\n    } )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n \r\n        const auth= getAuth();\r\n            createUserWithEmailAndPassword(auth, email, password)\r\n                .then( async({user})=> {\r\n \r\n                await updateProfile( user, { displayName: name });\r\n \r\n            console.log(user);\r\n\r\n            dispatch(\r\n                login( user.uid, user.displayName )\r\n            )\r\n        }).catch( e=> {\r\n            console.log(e)\r\n            if ( e.message === 'Firebase: Error (auth/email-already-in-use).' ){\r\n                Swal.fire('Error', 'Email address is already in use', 'error')\r\n        }} )\r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () =>{\r\n    return (dispatch) =>{\r\n        const auth = getAuth();\r\n        signInWithPopup(auth, googleAuthProvider).then(({user}) =>{\r\n                //console.log(user)\r\n                dispatch(login(user.uid, user.displayName))\r\n            });\r\n    }\r\n}\r\n\r\nexport const login= (uid, displayName)=> {\r\n    return{\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout= ()=> {\r\n    return async( dispatch )=> {\r\n        const auth= getAuth();\r\n        await signOut(auth);\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\n\r\nexport const logout= ()=> ({\r\n    type: types.logout\r\n})\r\n\r\n","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ( {id, date, title, body, url} ) => {\r\n\r\n    //console.log(id, date, title, body, url);\r\n    const noteDate= moment(date);\r\n    //console.log(noteDate);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleEntryClick= ()=>{\r\n        dispatch( activeNote (id, {\r\n            date, title, body, url\r\n        }) )\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeInDown\"\r\n            onClick= {handleEntryClick}>\r\n            {\r\n                url &&\r\n                    <div \r\n                        className=\"journal__entry-picture\"\r\n                        style= {{\r\n                            backgroundSize: 'cover',\r\n                            backgroundImage: `url(${ url })`\r\n                        }}>\r\n                    </div>\r\n            }\r\n                            \r\n                <div className=\"journal__entry-body\">\r\n                    <p className=\"journal__entry-title\">{title}</p>\r\n                    <p className=\"journal__entry-content\">{body}</p>\r\n                </div>\r\n                <div className=\"journal__entry-date-box\">\r\n                    <span>{noteDate.format('dddd')}</span>\r\n                    <h4>{noteDate.format('Do')}</h4>\r\n                </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    //const entries= [1,2,3,4,5]\r\n    const {notes} = useSelector(state => state.notes)\r\n    //console.log(notes)\r\n\r\n    return (\r\n        <div className=\"journal__entries animate__animated animate__fadeInDown\">\r\n            \r\n            {\r\n                notes.map(note=> (\r\n                    <JournalEntry \r\n                        key= {note.id}\r\n                        {...note} />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogOut= ()=> {\r\n        //console.log('Logout');\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleAddNew= ()=> {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i> \r\n                    <span> {name} </span>\r\n                </h3>\r\n\r\n                <button className=\"btn\"\r\n                        onClick= {handleLogOut}>\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\"\r\n                 onClick= {handleAddNew}>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes);\r\n  \r\n    return (\r\n        <div className=\"journal__main-content\">            \r\n            <Sidebar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    (active)\r\n                    ?  (<NoteScreen />)\r\n                    :  (<NothingSelected />)\r\n                }\r\n\r\n                {/*  */}\r\n            </main>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport 'animate.css';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {loading} = useSelector(state => state)\r\n\r\n    const [ formValues, handlerInputChange ]= useForm({\r\n        email: 'eburgos@gmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password }= formValues;\r\n\r\n    const handleLogin= (e)=> {\r\n\r\n        e.preventDefault();\r\n        //console.log(email, password)\r\n        dispatch( startLoginEmailPassword(email, password) )\r\n    \r\n    }\r\n\r\n    const handleGoogleLogin= ()=> {\r\n        dispatch( startGoogleLogin() )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form onSubmit= {handleLogin}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value= {email}\r\n                    onChange= {handlerInputChange} />\r\n                \r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value= {password}\r\n                    onChange= {handlerInputChange} />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled= {loading}>\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick= {handleGoogleLogin}\r\n                    >\r\n                        <div \r\n                            className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"register\"\r\n                    className=\"link\">\r\n                        Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    //const state = useSelector(state => state.ui);\r\n    const {msgError} = useSelector(state => state.ui);\r\n    //console.log(msgError);\r\n\r\n    const [ formValues, handleInputChange ]= useForm({\r\n        name: 'Ernesto',\r\n        email: 'eburgos@gmail.com',\r\n        password: '123456',\r\n        password2: '123456' \r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name, email, password, password2 }= formValues;\r\n\r\n    const handleRegister= (e)=> {\r\n        e.preventDefault();\r\n        //console.log(name, email, password, password2); \r\n        if ( isFormValid() ){\r\n            //console.log('Formulario correcto');\r\n            dispatch( startRegisterWithEmailPasswordName(email, password, name) )\r\n        }       \r\n    }\r\n\r\n    const isFormValid= ()=> {\r\n        \r\n        if( name.trim().length <= 1 ){\r\n            //console.log('Name is required');\r\n            dispatch( setError('Name is required') )\r\n            return false;\r\n        }else if ( !validator.isEmail( email ) ){\r\n            //console.log('Email is not valid');\r\n            dispatch( setError('Email is not valid') )\r\n            return false;\r\n        }else if ( password !== password2 || password.length < 6 ){\r\n            //console.log('Password must have 6 characters at least and match both');\r\n            dispatch( setError('Password must have 6 characters at least and match both') )\r\n            return false;\r\n        }\r\n        dispatch( removeError() )\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form onSubmit= {handleRegister}>\r\n\r\n                { \r\n                    msgError && \r\n                    (                        \r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Full name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value= {name} \r\n                    onChange= {handleInputChange}/>\r\n                \r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value= {email} \r\n                    onChange= {handleInputChange}/>\r\n                \r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value= {password} \r\n                    onChange= {handleInputChange}/>\r\n               \r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Repeat password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value= {password2} \r\n                    onChange= {handleInputChange}/>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\">\r\n                    Register\r\n                </button>\r\n                \r\n                <Link \r\n                    to=\"login\"\r\n                    className=\"link \">\r\n                        Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container animate__animated animate__fadeInLeft\">                \r\n                <Switch>\r\n                \r\n                    <Route \r\n                        exact \r\n                        path= \"/auth/login\" \r\n                        component= {LoginScreen} \r\n                    />\r\n\r\n                \r\n                    <Route \r\n                        exact \r\n                        path= \"/auth/register\" \r\n                        component= {RegisterScreen} \r\n                    />\r\n                \r\n                    <Redirect to= \"/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n               component= {(props) => (\r\n                   (isAuthenticated)\r\n                        ? ( <Component {...props} /> )\r\n                        : ( <Redirect to= \"/auth/login\" /> )\r\n               )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes= {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n               component= {(props) => (\r\n                   (!isAuthenticated)\r\n                        ? ( <Component {...props} /> )\r\n                        : ( <Redirect to= \"/\" /> )\r\n               )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes= {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useEffect } from 'react';\r\nimport { getAuth, onAuthStateChanged } from '@firebase/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { useState } from 'react';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n       \r\n        const auth= getAuth();\r\n        onAuthStateChanged(auth, (user)=>{\r\n            //console.log(user);\r\n            if ( user?.uid ){\r\n                dispatch( login(user.uid, user.displayName) );\r\n                setIsLoggedIn (true);\r\n\r\n                dispatch( startLoadingNotes(user.uid) )\r\n\r\n            }else{\r\n                setIsLoggedIn (false);\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        });\r\n       \r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if ( checking ){\r\n        return(\r\n            <h1>Please wait...</h1>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                \r\n                    <PublicRoute \r\n                        isAuthenticated= {isLoggedIn}\r\n                        path=\"/auth\" \r\n                        component= {AuthRouter} \r\n                    />\r\n                    \r\n                    <PrivateRoute \r\n                        isAuthenticated ={isLoggedIn}\r\n                        exact\r\n                        path=\"/\" \r\n                        component= {JournalScreen} \r\n                    />\r\n\r\n                    <Redirect to= \"/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../../types/types\";\r\n\r\nconst initialState= {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer= (state= initialState, action)=> {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n            \r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        \r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: initialState.loading\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","/*\r\n{\r\n    notes: [],\r\n    active: null,\r\n    active: {\r\n        id: 'hGSA52472as54d'\r\n        title: '',\r\n        body: '',\r\n        imageUrl: '',\r\n        date: 45678\r\n    }\r\n}\r\n*/\r\n\r\nimport { types } from \"../../types/types\";\r\n\r\nconst initialState= {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer= ( state= initialState, action )=> {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive: {\r\n            return{\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        }\r\n\r\n        case types.notesAddNew: {\r\n            return{\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        }\r\n\r\n        case types.notesLoad:\r\n            return{\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        \r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note=> note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note=> note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import thunk from 'redux-thunk';\r\nimport {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport { authReducer } from '../components/reducers/authReducer';\r\nimport { uiReducer } from '../components/reducers/uiReducer';\r\nimport { notesReducer } from '../components/reducers/notesReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers= combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store= createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../../types/types\";\r\n\r\nexport const authReducer= ( state= {}, action )=> {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        \r\n        case types.logout:\r\n            return { }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store= {store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  \n    <JournalApp />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}